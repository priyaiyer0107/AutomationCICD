<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-21T10:59:23 IST" name="Suite" finished-at="2025-08-21T10:59:43 IST" duration-ms="20016">
    <groups>
      <group name="Purchase">
        <method signature="StandAloneTest.TestCases(java.util.HashMap)[pri:0, instance:SKAutomation.Tests.StandAloneTest@3daf7722]" name="TestCases" class="SKAutomation.Tests.StandAloneTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2025-08-21T10:59:23 IST" name="ProductCatalogueTest" finished-at="2025-08-21T10:59:35 IST" duration-ms="12479">
      <class name="SKAutomation.Tests.StandAloneTest">
        <test-method is-config="true" signature="LaunchApplication()[pri:0, instance:SKAutomation.Tests.StandAloneTest@3daf7722]" started-at="2025-08-21T10:59:23 IST" name="LaunchApplication" finished-at="2025-08-21T10:59:26 IST" duration-ms="3011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchApplication -->
        <test-method signature="TestCases(java.util.HashMap)[pri:0, instance:SKAutomation.Tests.StandAloneTest@3daf7722]" started-at="2025-08-21T10:59:26 IST" name="TestCases" data-provider="getData" finished-at="2025-08-21T10:59:29 IST" duration-ms="2835" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{productname=ZARA COAT 3, password=Abc@123456, email=abc1233456@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCases -->
        <test-method is-config="true" signature="CloseApplication()[pri:0, instance:SKAutomation.Tests.StandAloneTest@3daf7722]" started-at="2025-08-21T10:59:29 IST" name="CloseApplication" finished-at="2025-08-21T10:59:29 IST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApplication -->
        <test-method is-config="true" signature="LaunchApplication()[pri:0, instance:SKAutomation.Tests.StandAloneTest@3daf7722]" started-at="2025-08-21T10:59:29 IST" name="LaunchApplication" finished-at="2025-08-21T10:59:30 IST" duration-ms="1273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchApplication -->
        <test-method signature="TestCases(java.util.HashMap)[pri:0, instance:SKAutomation.Tests.StandAloneTest@3daf7722]" started-at="2025-08-21T10:59:30 IST" name="TestCases" data-provider="getData" finished-at="2025-08-21T10:59:33 IST" duration-ms="2855" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{productname=ADIDAS ORIGINAL, password=Iamking@000, email=shetty@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCases -->
        <test-method is-config="true" signature="CloseApplication()[pri:0, instance:SKAutomation.Tests.StandAloneTest@3daf7722]" started-at="2025-08-21T10:59:33 IST" name="CloseApplication" finished-at="2025-08-21T10:59:33 IST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApplication -->
        <test-method is-config="true" signature="LaunchApplication()[pri:0, instance:SKAutomation.Tests.StandAloneTest@3daf7722]" started-at="2025-08-21T10:59:33 IST" name="LaunchApplication" finished-at="2025-08-21T10:59:34 IST" duration-ms="1209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchApplication -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:SKAutomation.Tests.StandAloneTest@3daf7722]" started-at="2025-08-21T10:59:34 IST" name="OrderHistoryTest" finished-at="2025-08-21T10:59:35 IST" depends-on-methods="SKAutomation.Tests.StandAloneTest.TestCases" duration-ms="741" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="CloseApplication()[pri:0, instance:SKAutomation.Tests.StandAloneTest@3daf7722]" started-at="2025-08-21T10:59:35 IST" name="CloseApplication" finished-at="2025-08-21T10:59:35 IST" duration-ms="103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApplication -->
      </class> <!-- SKAutomation.Tests.StandAloneTest -->
    </test> <!-- ProductCatalogueTest -->
    <test started-at="2025-08-21T10:59:35 IST" name="ErrorCheckTest" finished-at="2025-08-21T10:59:43 IST" duration-ms="7284">
      <class name="SKAutomation.Tests.ErrorValidation">
        <test-method is-config="true" signature="LaunchApplication()[pri:0, instance:SKAutomation.Tests.ErrorValidation@34158c08]" started-at="2025-08-21T10:59:35 IST" name="LaunchApplication" finished-at="2025-08-21T10:59:37 IST" duration-ms="1269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchApplication -->
        <test-method signature="LoginTestCases()[pri:0, instance:SKAutomation.Tests.ErrorValidation@34158c08]" started-at="2025-08-21T10:59:37 IST" name="LoginTestCases" finished-at="2025-08-21T10:59:37 IST" duration-ms="390" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at SKAutomation.Tests.ErrorValidation.LoginTestCases(ErrorValidation.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTestCases -->
        <test-method is-config="true" signature="CloseApplication()[pri:0, instance:SKAutomation.Tests.ErrorValidation@34158c08]" started-at="2025-08-21T10:59:37 IST" name="CloseApplication" finished-at="2025-08-21T10:59:37 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApplication -->
        <test-method is-config="true" signature="LaunchApplication()[pri:0, instance:SKAutomation.Tests.ErrorValidation@34158c08]" started-at="2025-08-21T10:59:37 IST" name="LaunchApplication" finished-at="2025-08-21T10:59:40 IST" duration-ms="2392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchApplication -->
        <test-method signature="ProductTestCases()[pri:0, instance:SKAutomation.Tests.ErrorValidation@34158c08]" started-at="2025-08-21T10:59:40 IST" name="ProductTestCases" finished-at="2025-08-21T10:59:43 IST" duration-ms="2805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductTestCases -->
        <test-method is-config="true" signature="CloseApplication()[pri:0, instance:SKAutomation.Tests.ErrorValidation@34158c08]" started-at="2025-08-21T10:59:43 IST" name="CloseApplication" finished-at="2025-08-21T10:59:43 IST" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApplication -->
      </class> <!-- SKAutomation.Tests.ErrorValidation -->
    </test> <!-- ErrorCheckTest -->
  </suite> <!-- Suite -->
</testng-results>
